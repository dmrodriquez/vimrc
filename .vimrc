execute pathogen#infect()
set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

" The following are examples of different formats supported.
" Keep Plugin commands between vundle#begin/end.
" plugin on GitHub repo
Plugin 'tpope/vim-fugitive'
" plugin from http://vim-scripts.org/vim/scripts.html
" Plugin 'L9'
" Git plugin not hosted on GitHub
Plugin 'git://git.wincent.com/command-t.git'
" git repos on your local machine (i.e. when working on your own plugin)
"Plugin 'file:///home/gmarik/path/to/plugin'
" The sparkup vim script is in a subdirectory of this repo called vim.
" Pass the path to set the runtimepath properly.
Plugin 'rstacruz/sparkup', {'rtp': 'vim/'}
" Install L9 and avoid a Naming conflict if you've already installed a
" different version somewhere else.
" Plugin 'ascenator/L9', {'name': 'newL9'}


"NERDTREE - provides file browing
Plugin 'scrooloose/nerdtree'

"EasyMotion - motions with keader key
Plugin 'easymotion/vim-easymotion'

"EasyTags - autogenerated tags
Plugin 'xolox/vim-easytags'

"Syntastic - syntax checking
Plugin 'scroolose/syntastic'

"neocomplete - automatic completion
Plugin 'Valloric/YouCompleteMe'

"UndoTree - visualize the undo tree
Plugin 'mbbill/undotree'
"keymaps for undotree

"Tags
Plugin 'taglist.vim'

Plugin 'godlygeek/tabular'
Plugin 'plasticboy/vim-markdown'

"Slime
Plugin 'jpalardy/vim-slime'

Plugin 'altercation/vim-colors-solarized'
Plugin 'flazz/vim-colorschemes'
Plugin 'fenetikm/falcon'

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required
set tabstop=4
set shiftwidth=4
set expandtab
" To ignore plugin indent changes, instead use:
"filetype plugin on
"
" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
"
" see :h vundle for more details or wiki for FAQ
" Put your non-Plugin stuff after this line

"Tags Keymap
nnoremap <leader>t :TlistToggle<CR>

"TreeToggle mapping
nnoremap <leader>u :UndotreeToggle<CR>

"NERDTree Mapping
nnoremap <leader>o :NERDTreeToggle<CR>

Plugin 'xolox/vim-misc'

"Essential Plugins and keymaps
nnoremap <leader>gw :Gitwrite<cr>
nnoremap <leader>gc :Gitcommit<cr>
nnoremap <leader>gp :Gitpush<cr>
nnoremap <leader>gp :Gitpush<cr>

"command remapping

"Q and q W and w
:command Q q
:command W w

"Saving
nnoremap <leader>s :w<CR>

" if a r/o file and need write access
nnoremap <leader><F12> :w !sudo tee % > /dev/null<CR>


"Window Navigation:
nnoremap <C-l> <C-w><C-l>
nnoremap <C-k> <C-w><C-k>
nnoremap <C-j> <C-w><C-j>
nnoremap <C-h> <C-w><C-h>

"Make the next tmux pane the receiver of one line commands
let g:slime_target="tmux"
let g:slime_paste_file = "$HOME/.slime_paste"
let g:slime_default_config = {"socket_name": split($TMUX, ",")[0], "target_pane": ":.1"}

set nu
set ruler

set hlsearch
filetype plugin on
syntax on

set mouse=a
set tags=tags

"PEP-8
au BufNewFile,BufRead *.py
    \ set tabstop=4
    \ set softtabstop=4
    \ set shiftwidth=4
    \ set textwidth=79
    \ set expandtab
    \ set autoindent
    \ set fileformat=unix

"python with virtualenv support
py << EOF
import os
import sys
if 'VIRTUAL_ENV' in os.environ:
  project_base_dir = os.environ['VIRTUAL_ENV']
  activate_this = os.path.join(project_base_dir, 'bin/activate_this.py')
  execfile(activate_this, dict(__file__=activate_this))
EOF

